//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------


namespace DirTuningExp
{
    #pragma warning disable // Disable all warnings

    [System.CodeDom.Compiler.GeneratedCodeAttribute("Bonsai.Sgen", "0.4.0.0 (YamlDotNet v13.0.0.0)")]
    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class Point2d
    {
    
        private double _x;
    
        private double _y;
    
        public Point2d()
        {
        }
    
        protected Point2d(Point2d other)
        {
            _x = other._x;
            _y = other._y;
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="x")]
        public double X
        {
            get
            {
                return _x;
            }
            set
            {
                _x = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="y")]
        public double Y
        {
            get
            {
                return _y;
            }
            set
            {
                _y = value;
            }
        }
    
        public System.IObservable<Point2d> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(new Point2d(this)));
        }
    
        public System.IObservable<Point2d> Process<TSource>(System.IObservable<TSource> source)
        {
            return System.Reactive.Linq.Observable.Select(source, _ => new Point2d(this));
        }
    
        protected virtual bool PrintMembers(System.Text.StringBuilder stringBuilder)
        {
            stringBuilder.Append("x = " + _x + ", ");
            stringBuilder.Append("y = " + _y);
            return true;
        }
    
        public override string ToString()
        {
            System.Text.StringBuilder stringBuilder = new System.Text.StringBuilder();
            stringBuilder.Append(GetType().Name);
            stringBuilder.Append(" { ");
            if (PrintMembers(stringBuilder))
            {
                stringBuilder.Append(" ");
            }
            stringBuilder.Append("}");
            return stringBuilder.ToString();
        }
    }


    /// <summary>
    /// Parameters to configure a stimulus series to determine direction tuning
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Bonsai.Sgen", "0.4.0.0 (YamlDotNet v13.0.0.0)")]
    [System.ComponentModel.DescriptionAttribute("Parameters to configure a stimulus series to determine direction tuning")]
    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class DirectionTuningStimuliFeatures
    {
    
        private StimulusParameters _stimulusParameters = new StimulusParameters();
    
        public DirectionTuningStimuliFeatures()
        {
        }
    
        protected DirectionTuningStimuliFeatures(DirectionTuningStimuliFeatures other)
        {
            _stimulusParameters = other._stimulusParameters;
        }
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="StimulusParameters")]
        public StimulusParameters StimulusParameters
        {
            get
            {
                return _stimulusParameters;
            }
            set
            {
                _stimulusParameters = value;
            }
        }
    
        public System.IObservable<DirectionTuningStimuliFeatures> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(new DirectionTuningStimuliFeatures(this)));
        }
    
        public System.IObservable<DirectionTuningStimuliFeatures> Process<TSource>(System.IObservable<TSource> source)
        {
            return System.Reactive.Linq.Observable.Select(source, _ => new DirectionTuningStimuliFeatures(this));
        }
    
        protected virtual bool PrintMembers(System.Text.StringBuilder stringBuilder)
        {
            stringBuilder.Append("StimulusParameters = " + _stimulusParameters);
            return true;
        }
    
        public override string ToString()
        {
            System.Text.StringBuilder stringBuilder = new System.Text.StringBuilder();
            stringBuilder.Append(GetType().Name);
            stringBuilder.Append(" { ");
            if (PrintMembers(stringBuilder))
            {
                stringBuilder.Append(" ");
            }
            stringBuilder.Append("}");
            return stringBuilder.ToString();
        }
    }


    [System.CodeDom.Compiler.GeneratedCodeAttribute("Bonsai.Sgen", "0.4.0.0 (YamlDotNet v13.0.0.0)")]
    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class StimulusParameters
    {
    
        private PositionSizeFeatures _positionSizeFeatures = new PositionSizeFeatures();
    
        private GratingFeatures _gratingFeatures = new GratingFeatures();
    
        private DirTuningFeatures _dirTuningFeatures = new DirTuningFeatures();
    
        public StimulusParameters()
        {
        }
    
        protected StimulusParameters(StimulusParameters other)
        {
            _positionSizeFeatures = other._positionSizeFeatures;
            _gratingFeatures = other._gratingFeatures;
            _dirTuningFeatures = other._dirTuningFeatures;
        }
    
        /// <summary>
        /// Parameters to define the position and size of the grating stimulus
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="PositionSizeFeatures")]
        [System.ComponentModel.DescriptionAttribute("Parameters to define the position and size of the grating stimulus")]
        public PositionSizeFeatures PositionSizeFeatures
        {
            get
            {
                return _positionSizeFeatures;
            }
            set
            {
                _positionSizeFeatures = value;
            }
        }
    
        /// <summary>
        /// Parameters to define the features of the grating stimulus
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="GratingFeatures")]
        [System.ComponentModel.DescriptionAttribute("Parameters to define the features of the grating stimulus")]
        public GratingFeatures GratingFeatures
        {
            get
            {
                return _gratingFeatures;
            }
            set
            {
                _gratingFeatures = value;
            }
        }
    
        /// <summary>
        /// Parameters to define the structure and timing of grating stimuli series
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="DirTuningFeatures")]
        [System.ComponentModel.DescriptionAttribute("Parameters to define the structure and timing of grating stimuli series")]
        public DirTuningFeatures DirTuningFeatures
        {
            get
            {
                return _dirTuningFeatures;
            }
            set
            {
                _dirTuningFeatures = value;
            }
        }
    
        public System.IObservable<StimulusParameters> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(new StimulusParameters(this)));
        }
    
        public System.IObservable<StimulusParameters> Process<TSource>(System.IObservable<TSource> source)
        {
            return System.Reactive.Linq.Observable.Select(source, _ => new StimulusParameters(this));
        }
    
        protected virtual bool PrintMembers(System.Text.StringBuilder stringBuilder)
        {
            stringBuilder.Append("PositionSizeFeatures = " + _positionSizeFeatures + ", ");
            stringBuilder.Append("GratingFeatures = " + _gratingFeatures + ", ");
            stringBuilder.Append("DirTuningFeatures = " + _dirTuningFeatures);
            return true;
        }
    
        public override string ToString()
        {
            System.Text.StringBuilder stringBuilder = new System.Text.StringBuilder();
            stringBuilder.Append(GetType().Name);
            stringBuilder.Append(" { ");
            if (PrintMembers(stringBuilder))
            {
                stringBuilder.Append(" ");
            }
            stringBuilder.Append("}");
            return stringBuilder.ToString();
        }
    }


    [System.CodeDom.Compiler.GeneratedCodeAttribute("Bonsai.Sgen", "0.4.0.0 (YamlDotNet v13.0.0.0)")]
    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class PositionSizeFeatures
    {
    
        private Point2d _extent = new Point2d();
    
        private Point2d _location = new Point2d();
    
        private double _radius;
    
        private double? _aperture;
    
        public PositionSizeFeatures()
        {
        }
    
        protected PositionSizeFeatures(PositionSizeFeatures other)
        {
            _extent = other._extent;
            _location = other._location;
            _radius = other._radius;
            _aperture = other._aperture;
        }
    
        /// <summary>
        /// The extent of the gratings in the x and y axes, in pixels
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="Extent")]
        [System.ComponentModel.DescriptionAttribute("The extent of the gratings in the x and y axes, in pixels")]
        public Point2d Extent
        {
            get
            {
                return _extent;
            }
            set
            {
                _extent = value;
            }
        }
    
        /// <summary>
        /// The translation of the gratings in the x and y axes, in pixels
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="Location")]
        [System.ComponentModel.DescriptionAttribute("The translation of the gratings in the x and y axes, in pixels")]
        public Point2d Location
        {
            get
            {
                return _location;
            }
            set
            {
                _location = value;
            }
        }
    
        /// <summary>
        /// The normalized radius of the clipping mask applied to the stimulus
        /// </summary>
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="Radius")]
        [System.ComponentModel.DescriptionAttribute("The normalized radius of the clipping mask applied to the stimulus")]
        public double Radius
        {
            get
            {
                return _radius;
            }
            set
            {
                _radius = value;
            }
        }
    
        /// <summary>
        /// The optional variance of the gaussian mask applied to the stimulus. A value of zero specifies that no mask should be applied
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="Aperture")]
        [System.ComponentModel.DescriptionAttribute("The optional variance of the gaussian mask applied to the stimulus. A value of ze" +
            "ro specifies that no mask should be applied")]
        public double? Aperture
        {
            get
            {
                return _aperture;
            }
            set
            {
                _aperture = value;
            }
        }
    
        public System.IObservable<PositionSizeFeatures> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(new PositionSizeFeatures(this)));
        }
    
        public System.IObservable<PositionSizeFeatures> Process<TSource>(System.IObservable<TSource> source)
        {
            return System.Reactive.Linq.Observable.Select(source, _ => new PositionSizeFeatures(this));
        }
    
        protected virtual bool PrintMembers(System.Text.StringBuilder stringBuilder)
        {
            stringBuilder.Append("Extent = " + _extent + ", ");
            stringBuilder.Append("Location = " + _location + ", ");
            stringBuilder.Append("Radius = " + _radius + ", ");
            stringBuilder.Append("Aperture = " + _aperture);
            return true;
        }
    
        public override string ToString()
        {
            System.Text.StringBuilder stringBuilder = new System.Text.StringBuilder();
            stringBuilder.Append(GetType().Name);
            stringBuilder.Append(" { ");
            if (PrintMembers(stringBuilder))
            {
                stringBuilder.Append(" ");
            }
            stringBuilder.Append("}");
            return stringBuilder.ToString();
        }
    }


    [System.CodeDom.Compiler.GeneratedCodeAttribute("Bonsai.Sgen", "0.4.0.0 (YamlDotNet v13.0.0.0)")]
    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class GratingFeatures
    {
    
        private bool _squareWave;
    
        private double _contrast;
    
        private double _spatialFrequency;
    
        private double _temporalFrequency;
    
        public GratingFeatures()
        {
        }
    
        protected GratingFeatures(GratingFeatures other)
        {
            _squareWave = other._squareWave;
            _contrast = other._contrast;
            _spatialFrequency = other._spatialFrequency;
            _temporalFrequency = other._temporalFrequency;
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="SquareWave")]
        public bool SquareWave
        {
            get
            {
                return _squareWave;
            }
            set
            {
                _squareWave = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="Contrast")]
        public double Contrast
        {
            get
            {
                return _contrast;
            }
            set
            {
                _contrast = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="SpatialFrequency")]
        public double SpatialFrequency
        {
            get
            {
                return _spatialFrequency;
            }
            set
            {
                _spatialFrequency = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="TemporalFrequency")]
        public double TemporalFrequency
        {
            get
            {
                return _temporalFrequency;
            }
            set
            {
                _temporalFrequency = value;
            }
        }
    
        public System.IObservable<GratingFeatures> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(new GratingFeatures(this)));
        }
    
        public System.IObservable<GratingFeatures> Process<TSource>(System.IObservable<TSource> source)
        {
            return System.Reactive.Linq.Observable.Select(source, _ => new GratingFeatures(this));
        }
    
        protected virtual bool PrintMembers(System.Text.StringBuilder stringBuilder)
        {
            stringBuilder.Append("SquareWave = " + _squareWave + ", ");
            stringBuilder.Append("Contrast = " + _contrast + ", ");
            stringBuilder.Append("SpatialFrequency = " + _spatialFrequency + ", ");
            stringBuilder.Append("TemporalFrequency = " + _temporalFrequency);
            return true;
        }
    
        public override string ToString()
        {
            System.Text.StringBuilder stringBuilder = new System.Text.StringBuilder();
            stringBuilder.Append(GetType().Name);
            stringBuilder.Append(" { ");
            if (PrintMembers(stringBuilder))
            {
                stringBuilder.Append(" ");
            }
            stringBuilder.Append("}");
            return stringBuilder.ToString();
        }
    }


    [System.CodeDom.Compiler.GeneratedCodeAttribute("Bonsai.Sgen", "0.4.0.0 (YamlDotNet v13.0.0.0)")]
    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class DirTuningFeatures
    {
    
        private double _numDirs;
    
        private double _numRepeats;
    
        private double _oNTime;
    
        private double _oFFTime;
    
        public DirTuningFeatures()
        {
        }
    
        protected DirTuningFeatures(DirTuningFeatures other)
        {
            _numDirs = other._numDirs;
            _numRepeats = other._numRepeats;
            _oNTime = other._oNTime;
            _oFFTime = other._oFFTime;
        }
    
        /// <summary>
        /// The number of distinct directional stimuli to display
        /// </summary>
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="NumDirs")]
        [System.ComponentModel.DescriptionAttribute("The number of distinct directional stimuli to display")]
        public double NumDirs
        {
            get
            {
                return _numDirs;
            }
            set
            {
                _numDirs = value;
            }
        }
    
        /// <summary>
        /// The number of repeats of the stimulus series to display
        /// </summary>
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="NumRepeats")]
        [System.ComponentModel.DescriptionAttribute("The number of repeats of the stimulus series to display")]
        public double NumRepeats
        {
            get
            {
                return _numRepeats;
            }
            set
            {
                _numRepeats = value;
            }
        }
    
        /// <summary>
        /// The time, in seconds, that each stimulus is displayed
        /// </summary>
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="ONTime")]
        [System.ComponentModel.DescriptionAttribute("The time, in seconds, that each stimulus is displayed")]
        public double ONTime
        {
            get
            {
                return _oNTime;
            }
            set
            {
                _oNTime = value;
            }
        }
    
        /// <summary>
        /// The time, in seconds, that each stimulus is displayed
        /// </summary>
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="OFFTime")]
        [System.ComponentModel.DescriptionAttribute("The time, in seconds, that each stimulus is displayed")]
        public double OFFTime
        {
            get
            {
                return _oFFTime;
            }
            set
            {
                _oFFTime = value;
            }
        }
    
        public System.IObservable<DirTuningFeatures> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(new DirTuningFeatures(this)));
        }
    
        public System.IObservable<DirTuningFeatures> Process<TSource>(System.IObservable<TSource> source)
        {
            return System.Reactive.Linq.Observable.Select(source, _ => new DirTuningFeatures(this));
        }
    
        protected virtual bool PrintMembers(System.Text.StringBuilder stringBuilder)
        {
            stringBuilder.Append("NumDirs = " + _numDirs + ", ");
            stringBuilder.Append("NumRepeats = " + _numRepeats + ", ");
            stringBuilder.Append("ONTime = " + _oNTime + ", ");
            stringBuilder.Append("OFFTime = " + _oFFTime);
            return true;
        }
    
        public override string ToString()
        {
            System.Text.StringBuilder stringBuilder = new System.Text.StringBuilder();
            stringBuilder.Append(GetType().Name);
            stringBuilder.Append(" { ");
            if (PrintMembers(stringBuilder))
            {
                stringBuilder.Append(" ");
            }
            stringBuilder.Append("}");
            return stringBuilder.ToString();
        }
    }


    /// <summary>
    /// Serializes a sequence of data model objects into YAML strings.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Bonsai.Sgen", "0.4.0.0 (YamlDotNet v13.0.0.0)")]
    [System.ComponentModel.DescriptionAttribute("Serializes a sequence of data model objects into YAML strings.")]
    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Transform)]
    public partial class SerializeToYaml
    {
    
        private System.IObservable<string> Process<T>(System.IObservable<T> source)
        {
            return System.Reactive.Linq.Observable.Defer(() =>
            {
                var serializer = new YamlDotNet.Serialization.SerializerBuilder()
                    .Build();
                return System.Reactive.Linq.Observable.Select(source, value => serializer.Serialize(value)); 
            });
        }

        public System.IObservable<string> Process(System.IObservable<Point2d> source)
        {
            return Process<Point2d>(source);
        }

        public System.IObservable<string> Process(System.IObservable<DirectionTuningStimuliFeatures> source)
        {
            return Process<DirectionTuningStimuliFeatures>(source);
        }

        public System.IObservable<string> Process(System.IObservable<StimulusParameters> source)
        {
            return Process<StimulusParameters>(source);
        }

        public System.IObservable<string> Process(System.IObservable<PositionSizeFeatures> source)
        {
            return Process<PositionSizeFeatures>(source);
        }

        public System.IObservable<string> Process(System.IObservable<GratingFeatures> source)
        {
            return Process<GratingFeatures>(source);
        }

        public System.IObservable<string> Process(System.IObservable<DirTuningFeatures> source)
        {
            return Process<DirTuningFeatures>(source);
        }
    }


    /// <summary>
    /// Deserializes a sequence of YAML strings into data model objects.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Bonsai.Sgen", "0.4.0.0 (YamlDotNet v13.0.0.0)")]
    [System.ComponentModel.DescriptionAttribute("Deserializes a sequence of YAML strings into data model objects.")]
    [System.ComponentModel.DefaultPropertyAttribute("Type")]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Transform)]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<Point2d>))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<DirectionTuningStimuliFeatures>))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<StimulusParameters>))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<PositionSizeFeatures>))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<GratingFeatures>))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<DirTuningFeatures>))]
    public partial class DeserializeFromYaml : Bonsai.Expressions.SingleArgumentExpressionBuilder
    {
    
        public DeserializeFromYaml()
        {
            Type = new Bonsai.Expressions.TypeMapping<DirectionTuningStimuliFeatures>();
        }

        public Bonsai.Expressions.TypeMapping Type { get; set; }

        public override System.Linq.Expressions.Expression Build(System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression> arguments)
        {
            var typeMapping = (Bonsai.Expressions.TypeMapping)Type;
            var returnType = typeMapping.GetType().GetGenericArguments()[0];
            return System.Linq.Expressions.Expression.Call(
                typeof(DeserializeFromYaml),
                "Process",
                new System.Type[] { returnType },
                System.Linq.Enumerable.Single(arguments));
        }

        private static System.IObservable<T> Process<T>(System.IObservable<string> source)
        {
            return System.Reactive.Linq.Observable.Defer(() =>
            {
                var serializer = new YamlDotNet.Serialization.DeserializerBuilder()
                    .Build();
                return System.Reactive.Linq.Observable.Select(source, value =>
                {
                    var reader = new System.IO.StringReader(value);
                    var parser = new YamlDotNet.Core.MergingParser(new YamlDotNet.Core.Parser(reader));
                    return serializer.Deserialize<T>(parser);
                });
            });
        }
    }
}